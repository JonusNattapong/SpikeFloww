[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "spikeflow"
version = "0.1.1"
description = "Enhanced Spiking Neural Network Library for Neuromorphic Computing"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "JonusNattapong", email = "jonus@spikeflow.dev"}
]
maintainers = [
    {name = "JonusNattapong", email = "jonus@spikeflow.dev"}
]
keywords = [
    "spiking-neural-networks",
    "neuromorphic-computing", 
    "machine-learning",
    "pytorch",
    "deep-learning",
    "artificial-intelligence"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules"
]

dependencies = [
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "matplotlib>=3.4.0",
    "tqdm>=4.60.0",
    "tensorboard>=2.8.0",
    "psutil>=5.8.0"
    "seaborn>=0.11.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=22.0",
    "flake8>=5.0",
    "mypy>=1.0",
    "pre-commit>=2.20"
]
docs = [
    "sphinx>=5.0",
    "sphinx-rtd-theme>=1.0",
    "nbsphinx>=0.8",
    "myst-parser>=0.18"
]
hardware = [
    "nxsdk",  # Intel Loihi SDK
    "spynnaker>=6.0"  # SpiNNaker interface
]
all = [
    "spikeflow[dev,docs,hardware]"
]

[project.urls]
Homepage = "https://github.com/JonusNattapong/SpikeFlow"
Documentation = "https://spikeflow.readthedocs.io"
Repository = "https://github.com/JonusNattapong/SpikeFlow.git"
Issues = "https://github.com/JonusNattapong/SpikeFlow/issues"
Changelog = "https://github.com/JonusNattapong/SpikeFlow/blob/main/CHANGELOG.md"

[project.scripts]
spikeflow-benchmark = "spikeflow.cli.benchmark:main"
spikeflow-optimize = "spikeflow.cli.optimize:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["spikeflow*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
spikeflow = ["py.typed", "*.pyi"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["spikeflow"]

[tool.mypy]
python_version = "0.1.1"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=spikeflow --cov-report=html --cov-report=term-missing"

[tool.coverage.run]
source = ["spikeflow"]
omit = [
    "*/tests/*",
    "*/examples/*",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError"
]
